#include <Arduino.h> // Inclui a biblioteca principal do Arduino
#include <esp_now.h> // Inclui a biblioteca para o ESP-NOW
#include <WiFi.h>    // Inclui a biblioteca para o WiFi

// Estrutura para receber dados
// Deve ser idêntica à estrutura do transmissor
typedef struct mensagem {
    bool estadoLed; // Variável para armazenar o estado do LED
} mensagem;

// Cria uma instância da estrutura de mensagem
mensagem meusDados;

// Define os pinos do LED RGB
const int PINO_VERMELHO = 14;
const int PINO_VERDE = 12;
const int PINO_AZUL = 13;

// Função para configurar a cor do LED RGB
void configurarCorRGB(bool estadoLed) {
  if (estadoLed) {
    // Acende o LED na cor vermelha
    digitalWrite(PINO_VERMELHO, HIGH); // Vermelho
    digitalWrite(PINO_VERDE, LOW);     // Verde desligado
    digitalWrite(PINO_AZUL, LOW);      // Azul desligado
  } else {
    // Desliga todos os LEDs
    digitalWrite(PINO_VERMELHO, LOW);
    digitalWrite(PINO_VERDE, LOW);
    digitalWrite(PINO_AZUL, LOW);
  }
}

// Callback quando dados são recebidos
void aoReceberDados(const uint8_t * mac, const uint8_t *dadosRecebidos, int len) {
  memcpy(&meusDados, dadosRecebidos, sizeof(meusDados)); // Copia os dados recebidos para a estrutura
  configurarCorRGB(meusDados.estadoLed); // Configura a cor do LED com base no estado recebido
  Serial.print("Dados recebidos: ");
  Serial.println(meusDados.estadoLed ? "LED Ligado" : "LED Desligado"); // Imprime o estado do LED
}

void setup() {
  Serial.begin(115200); // Inicializa a comunicação Serial com 115200 bps

  // Configura os pinos do LED como saída
  pinMode(PINO_VERMELHO, OUTPUT);
  pinMode(PINO_VERDE, OUTPUT);
  pinMode(PINO_AZUL, OUTPUT);

  // Configura o WiFi no modo STA (Station)
  WiFi.mode(WIFI_STA);

  // Inicializa o ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Erro ao inicializar o ESP-NOW"); // Erro na inicialização do ESP-NOW
    return;
  }

  esp_now_register_recv_cb(aoReceberDados); // Registra o callback de recebimento de dados
}

void loop() {
  // O loop principal está vazio porque a lógica é tratada no callback de recebimento
}
