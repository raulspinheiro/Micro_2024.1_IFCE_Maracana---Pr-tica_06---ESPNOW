#include <Arduino.h> // Inclui a biblioteca principal do Arduino
#include <esp_now.h> // Inclui a biblioteca para o ESP-NOW
#include <WiFi.h>    // Inclui a biblioteca para o WiFi

// Estrutura para enviar dados
// Deve ser idêntica à estrutura do receptor
typedef struct mensagem {
    bool estadoLed; // Variável para armazenar o estado do LED
} mensagem;

// Cria uma instância da estrutura de mensagem
mensagem meusDados;

// Endereço MAC do receptor
uint8_t enderecoBroadcast[] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};

// Função de callback chamada quando os dados são enviados
void aoEnviarDados(const uint8_t *mac_addr, esp_now_send_status_t status) {
  Serial.print("\r\nStatus do Envio: "); // Imprime o status do envio
  if (status == ESP_NOW_SEND_SUCCESS) {
    Serial.println("Sucesso"); // Sucesso no envio
  } else {
    Serial.println("Falha"); // Falha no envio
  }
}

void setup() {
  Serial.begin(115200); // Inicializa a comunicação Serial com 115200 bps

  // Inicializa o ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Erro ao inicializar o ESP-NOW"); // Erro na inicialização
    return;
  }

  esp_now_register_send_cb(aoEnviarDados); // Registra a função de callback de envio
  
  // Configura informações do receptor
  esp_now_peer_info_t informacoesPar;
  memcpy(informacoesPar.peer_addr, enderecoBroadcast, 6); // Copia o endereço MAC
  informacoesPar.channel = 0;  // Define o canal como 0
  informacoesPar.encrypt = false; // Desativa a criptografia
  
  // Adiciona o receptor como um par
  if (esp_now_add_peer(&informacoesPar) != ESP_OK){
    Serial.println("Falha ao adicionar o par"); // Falha ao adicionar o par
    return;
  }

  pinMode(BUTTON_PIN, INPUT_PULLUP); // Configura o pino do botão como entrada com resistor de pull-up
}

void loop() {
  // Verifica se o botão foi pressionado
  if (digitalRead(BUTTON_PIN) == LOW) {
    meusDados.estadoLed = !meusDados.estadoLed; // Alterna o estado do LED

    // Envia a estrutura de dados
    esp_now_send(enderecoBroadcast, (uint8_t *) &meusDados, sizeof(meusDados));
    
    delay(200); // Aguarda 200ms para evitar leituras múltiplas
  }
}
